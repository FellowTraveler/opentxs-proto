// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StorageItems.proto

#include "StorageItems.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace opentxs {
namespace proto {
class StorageItemsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorageItems>
      _instance;
} _StorageItems_default_instance_;
}  // namespace proto
}  // namespace opentxs
namespace protobuf_StorageItems_2eproto {
void InitDefaultsStorageItemsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::opentxs::proto::_StorageItems_default_instance_;
    new (ptr) ::opentxs::proto::StorageItems();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::proto::StorageItems::InitAsDefaultInstance();
}

void InitDefaultsStorageItems() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStorageItemsImpl);
}

}  // namespace protobuf_StorageItems_2eproto
namespace opentxs {
namespace proto {

// ===================================================================

void StorageItems::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageItems::kVersionFieldNumber;
const int StorageItems::kCredsFieldNumber;
const int StorageItems::kNymsFieldNumber;
const int StorageItems::kServersFieldNumber;
const int StorageItems::kUnitsFieldNumber;
const int StorageItems::kSeedsFieldNumber;
const int StorageItems::kContactsFieldNumber;
const int StorageItems::kBlockchaintransactionsFieldNumber;
const int StorageItems::kAccountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageItems::StorageItems()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StorageItems_2eproto::InitDefaultsStorageItems();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.proto.StorageItems)
}
StorageItems::StorageItems(const StorageItems& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  creds_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_creds()) {
    creds_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creds_);
  }
  nyms_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nyms()) {
    nyms_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nyms_);
  }
  servers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_servers()) {
    servers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servers_);
  }
  units_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_units()) {
    units_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.units_);
  }
  seeds_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_seeds()) {
    seeds_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seeds_);
  }
  contacts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_contacts()) {
    contacts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contacts_);
  }
  blockchaintransactions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_blockchaintransactions()) {
    blockchaintransactions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blockchaintransactions_);
  }
  accounts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_accounts()) {
    accounts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accounts_);
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:opentxs.proto.StorageItems)
}

void StorageItems::SharedCtor() {
  _cached_size_ = 0;
  creds_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nyms_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servers_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  units_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seeds_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contacts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blockchaintransactions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accounts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0u;
}

StorageItems::~StorageItems() {
  // @@protoc_insertion_point(destructor:opentxs.proto.StorageItems)
  SharedDtor();
}

void StorageItems::SharedDtor() {
  creds_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nyms_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servers_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  units_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seeds_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contacts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blockchaintransactions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accounts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StorageItems& StorageItems::default_instance() {
  ::protobuf_StorageItems_2eproto::InitDefaultsStorageItems();
  return *internal_default_instance();
}

StorageItems* StorageItems::New(::google::protobuf::Arena* arena) const {
  StorageItems* n = new StorageItems;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageItems::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.proto.StorageItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!creds_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*creds_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!nyms_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nyms_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!servers_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*servers_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!units_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*units_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!seeds_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*seeds_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!contacts_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*contacts_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!blockchaintransactions_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*blockchaintransactions_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!accounts_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*accounts_.UnsafeRawStringPointer())->clear();
    }
  }
  version_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StorageItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.proto.StorageItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string creds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nyms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nyms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string servers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string units = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_units()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string seeds = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seeds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string contacts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contacts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string blockchaintransactions = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_blockchaintransactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string accounts = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.proto.StorageItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.proto.StorageItems)
  return false;
#undef DO_
}

void StorageItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.proto.StorageItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional string creds = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->creds(), output);
  }

  // optional string nyms = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nyms(), output);
  }

  // optional string servers = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->servers(), output);
  }

  // optional string units = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->units(), output);
  }

  // optional string seeds = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->seeds(), output);
  }

  // optional string contacts = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->contacts(), output);
  }

  // optional string blockchaintransactions = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->blockchaintransactions(), output);
  }

  // optional string accounts = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->accounts(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.proto.StorageItems)
}

size_t StorageItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.proto.StorageItems)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  if (_has_bits_[0 / 32] & 255u) {
    // optional string creds = 2;
    if (has_creds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->creds());
    }

    // optional string nyms = 3;
    if (has_nyms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nyms());
    }

    // optional string servers = 4;
    if (has_servers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->servers());
    }

    // optional string units = 5;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->units());
    }

    // optional string seeds = 6;
    if (has_seeds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->seeds());
    }

    // optional string contacts = 7;
    if (has_contacts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->contacts());
    }

    // optional string blockchaintransactions = 8;
    if (has_blockchaintransactions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->blockchaintransactions());
    }

    // optional string accounts = 9;
    if (has_accounts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->accounts());
    }

  }
  // optional uint32 version = 1;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageItems::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StorageItems*>(&from));
}

void StorageItems::MergeFrom(const StorageItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.proto.StorageItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_creds();
      creds_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creds_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nyms();
      nyms_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nyms_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_servers();
      servers_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servers_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_units();
      units_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.units_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_seeds();
      seeds_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seeds_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_contacts();
      contacts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contacts_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_blockchaintransactions();
      blockchaintransactions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blockchaintransactions_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_accounts();
      accounts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accounts_);
    }
  }
  if (cached_has_bits & 0x00000100u) {
    set_version(from.version());
  }
}

void StorageItems::CopyFrom(const StorageItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.proto.StorageItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageItems::IsInitialized() const {
  return true;
}

void StorageItems::Swap(StorageItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageItems::InternalSwap(StorageItems* other) {
  using std::swap;
  creds_.Swap(&other->creds_);
  nyms_.Swap(&other->nyms_);
  servers_.Swap(&other->servers_);
  units_.Swap(&other->units_);
  seeds_.Swap(&other->seeds_);
  contacts_.Swap(&other->contacts_);
  blockchaintransactions_.Swap(&other->blockchaintransactions_);
  accounts_.Swap(&other->accounts_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string StorageItems::GetTypeName() const {
  return "opentxs.proto.StorageItems";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace opentxs

// @@protoc_insertion_point(global_scope)
