// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ContactSection.proto

#ifndef PROTOBUF_ContactSection_2eproto__INCLUDED
#define PROTOBUF_ContactSection_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "ContactEnums.pb.h"  // IWYU pragma: export
#include "ContactItem.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protobuf_ContactSection_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void InitDefaultsContactSectionImpl();
void InitDefaultsContactSection();
inline void InitDefaults() {
  InitDefaultsContactSection();
}
}  // namespace protobuf_ContactSection_2eproto
namespace opentxs {
namespace proto {
class ContactSection;
class ContactSectionDefaultTypeInternal;
extern ContactSectionDefaultTypeInternal _ContactSection_default_instance_;
}  // namespace proto
}  // namespace opentxs
namespace opentxs {
namespace proto {

// ===================================================================

class ContactSection : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:opentxs.proto.ContactSection) */ {
 public:
  ContactSection();
  virtual ~ContactSection();

  ContactSection(const ContactSection& from);

  inline ContactSection& operator=(const ContactSection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContactSection(ContactSection&& from) noexcept
    : ContactSection() {
    *this = ::std::move(from);
  }

  inline ContactSection& operator=(ContactSection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ContactSection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContactSection* internal_default_instance() {
    return reinterpret_cast<const ContactSection*>(
               &_ContactSection_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ContactSection* other);
  friend void swap(ContactSection& a, ContactSection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContactSection* New() const PROTOBUF_FINAL { return New(NULL); }

  ContactSection* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ContactSection& from);
  void MergeFrom(const ContactSection& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ContactSection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .opentxs.proto.ContactItem item = 3;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 3;
  const ::opentxs::proto::ContactItem& item(int index) const;
  ::opentxs::proto::ContactItem* mutable_item(int index);
  ::opentxs::proto::ContactItem* add_item();
  ::google::protobuf::RepeatedPtrField< ::opentxs::proto::ContactItem >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::opentxs::proto::ContactItem >&
      item() const;

  // optional uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional .opentxs.proto.ContactSectionName name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  ::opentxs::proto::ContactSectionName name() const;
  void set_name(::opentxs::proto::ContactSectionName value);

  // @@protoc_insertion_point(class_scope:opentxs.proto.ContactSection)
 private:
  void set_has_version();
  void clear_has_version();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::opentxs::proto::ContactItem > item_;
  ::google::protobuf::uint32 version_;
  int name_;
  friend struct ::protobuf_ContactSection_2eproto::TableStruct;
  friend void ::protobuf_ContactSection_2eproto::InitDefaultsContactSectionImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ContactSection

// optional uint32 version = 1;
inline bool ContactSection::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContactSection::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContactSection::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContactSection::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 ContactSection::version() const {
  // @@protoc_insertion_point(field_get:opentxs.proto.ContactSection.version)
  return version_;
}
inline void ContactSection::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:opentxs.proto.ContactSection.version)
}

// optional .opentxs.proto.ContactSectionName name = 2;
inline bool ContactSection::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContactSection::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContactSection::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContactSection::clear_name() {
  name_ = 0;
  clear_has_name();
}
inline ::opentxs::proto::ContactSectionName ContactSection::name() const {
  // @@protoc_insertion_point(field_get:opentxs.proto.ContactSection.name)
  return static_cast< ::opentxs::proto::ContactSectionName >(name_);
}
inline void ContactSection::set_name(::opentxs::proto::ContactSectionName value) {
  assert(::opentxs::proto::ContactSectionName_IsValid(value));
  set_has_name();
  name_ = value;
  // @@protoc_insertion_point(field_set:opentxs.proto.ContactSection.name)
}

// repeated .opentxs.proto.ContactItem item = 3;
inline int ContactSection::item_size() const {
  return item_.size();
}
inline const ::opentxs::proto::ContactItem& ContactSection::item(int index) const {
  // @@protoc_insertion_point(field_get:opentxs.proto.ContactSection.item)
  return item_.Get(index);
}
inline ::opentxs::proto::ContactItem* ContactSection::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:opentxs.proto.ContactSection.item)
  return item_.Mutable(index);
}
inline ::opentxs::proto::ContactItem* ContactSection::add_item() {
  // @@protoc_insertion_point(field_add:opentxs.proto.ContactSection.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::opentxs::proto::ContactItem >*
ContactSection::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:opentxs.proto.ContactSection.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::opentxs::proto::ContactItem >&
ContactSection::item() const {
  // @@protoc_insertion_point(field_list:opentxs.proto.ContactSection.item)
  return item_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace opentxs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ContactSection_2eproto__INCLUDED
