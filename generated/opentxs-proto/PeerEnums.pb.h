// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PeerEnums.proto

#ifndef PROTOBUF_PeerEnums_2eproto__INCLUDED
#define PROTOBUF_PeerEnums_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace protobuf_PeerEnums_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
inline void InitDefaults() {
}
}  // namespace protobuf_PeerEnums_2eproto
namespace opentxs {
namespace proto {
}  // namespace proto
}  // namespace opentxs
namespace opentxs {
namespace proto {

enum PeerObjectType {
  PEEROBJECT_ERROR = 0,
  PEEROBJECT_MESSAGE = 1,
  PEEROBJECT_REQUEST = 2,
  PEEROBJECT_RESPONSE = 3,
  PEEROBJECT_PAYMENT = 4
};
bool PeerObjectType_IsValid(int value);
const PeerObjectType PeerObjectType_MIN = PEEROBJECT_ERROR;
const PeerObjectType PeerObjectType_MAX = PEEROBJECT_PAYMENT;
const int PeerObjectType_ARRAYSIZE = PeerObjectType_MAX + 1;

enum PeerRequestType {
  PEERREQUEST_ERROR = 0,
  PEERREQUEST_BAILMENT = 1,
  PEERREQUEST_OUTBAILMENT = 2,
  PEERREQUEST_PENDINGBAILMENT = 3,
  PEERREQUEST_CONNECTIONINFO = 4,
  PEERREQUEST_STORESECRET = 5,
  PEERREQUEST_VERIFICATIONOFFER = 6,
  PEERREQUEST_FAUCET = 7
};
bool PeerRequestType_IsValid(int value);
const PeerRequestType PeerRequestType_MIN = PEERREQUEST_ERROR;
const PeerRequestType PeerRequestType_MAX = PEERREQUEST_FAUCET;
const int PeerRequestType_ARRAYSIZE = PeerRequestType_MAX + 1;

enum ConnectionInfoType {
  CONNECTIONINFO_ERROR = 0,
  CONNECTIONINFO_BITCOIN = 1,
  CONNECTIONINFO_BTCRPC = 2,
  CONNECTIONINFO_BITMESSAGE = 3,
  CONNECTIONINFO_BITMESSAGERPC = 4,
  CONNECTIONINFO_SSH = 5,
  CONNECTIONINFO_CJDNS = 6
};
bool ConnectionInfoType_IsValid(int value);
const ConnectionInfoType ConnectionInfoType_MIN = CONNECTIONINFO_ERROR;
const ConnectionInfoType ConnectionInfoType_MAX = CONNECTIONINFO_CJDNS;
const int ConnectionInfoType_ARRAYSIZE = ConnectionInfoType_MAX + 1;

enum SecretType {
  SECRETTYPE_ERROR = 0,
  SECRETTYPE_BIP39 = 1
};
bool SecretType_IsValid(int value);
const SecretType SecretType_MIN = SECRETTYPE_ERROR;
const SecretType SecretType_MAX = SECRETTYPE_BIP39;
const int SecretType_ARRAYSIZE = SecretType_MAX + 1;

// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace opentxs

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::opentxs::proto::PeerObjectType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::opentxs::proto::PeerRequestType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::opentxs::proto::ConnectionInfoType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::opentxs::proto::SecretType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PeerEnums_2eproto__INCLUDED
