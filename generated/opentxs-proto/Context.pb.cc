// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Context.proto

#include "Context.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace opentxs {
namespace proto {
class ContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Context>
      _instance;
  const ::opentxs::proto::ServerContext* servercontext_;
  const ::opentxs::proto::ClientContext* clientcontext_;
} _Context_default_instance_;
}  // namespace proto
}  // namespace opentxs
namespace protobuf_Context_2eproto {
void InitDefaultsContextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ServerContext_2eproto::InitDefaultsServerContext();
  protobuf_ClientContext_2eproto::InitDefaultsClientContext();
  protobuf_Signature_2eproto::InitDefaultsSignature();
  {
    void* ptr = &::opentxs::proto::_Context_default_instance_;
    new (ptr) ::opentxs::proto::Context();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::proto::Context::InitAsDefaultInstance();
}

void InitDefaultsContext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContextImpl);
}

}  // namespace protobuf_Context_2eproto
namespace opentxs {
namespace proto {

// ===================================================================

void Context::InitAsDefaultInstance() {
  ::opentxs::proto::_Context_default_instance_._instance.get_mutable()->signature_ = const_cast< ::opentxs::proto::Signature*>(
      ::opentxs::proto::Signature::internal_default_instance());
}
void Context::set_allocated_servercontext(::opentxs::proto::ServerContext* servercontext) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_typedata();
  if (servercontext) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      servercontext = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, servercontext, submessage_arena);
    }
    set_has_servercontext();
    typedata_.servercontext_ = servercontext;
  }
  // @@protoc_insertion_point(field_set_allocated:opentxs.proto.Context.servercontext)
}
void Context::clear_servercontext() {
  if (has_servercontext()) {
    delete typedata_.servercontext_;
    clear_has_typedata();
  }
}
void Context::set_allocated_clientcontext(::opentxs::proto::ClientContext* clientcontext) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_typedata();
  if (clientcontext) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clientcontext = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clientcontext, submessage_arena);
    }
    set_has_clientcontext();
    typedata_.clientcontext_ = clientcontext;
  }
  // @@protoc_insertion_point(field_set_allocated:opentxs.proto.Context.clientcontext)
}
void Context::clear_clientcontext() {
  if (has_clientcontext()) {
    delete typedata_.clientcontext_;
    clear_has_typedata();
  }
}
void Context::clear_signature() {
  if (signature_ != NULL) signature_->Clear();
  clear_has_signature();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Context::kVersionFieldNumber;
const int Context::kTypeFieldNumber;
const int Context::kLocalnymFieldNumber;
const int Context::kRemotenymFieldNumber;
const int Context::kLocalnymboxhashFieldNumber;
const int Context::kRemotenymboxhashFieldNumber;
const int Context::kRequestnumberFieldNumber;
const int Context::kAcknowledgedrequestnumberFieldNumber;
const int Context::kAvailabletransactionnumberFieldNumber;
const int Context::kIssuedtransactionnumberFieldNumber;
const int Context::kServercontextFieldNumber;
const int Context::kClientcontextFieldNumber;
const int Context::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Context::Context()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Context_2eproto::InitDefaultsContext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.proto.Context)
}
Context::Context(const Context& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      acknowledgedrequestnumber_(from.acknowledgedrequestnumber_),
      availabletransactionnumber_(from.availabletransactionnumber_),
      issuedtransactionnumber_(from.issuedtransactionnumber_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  localnym_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_localnym()) {
    localnym_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localnym_);
  }
  remotenym_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_remotenym()) {
    remotenym_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remotenym_);
  }
  localnymboxhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_localnymboxhash()) {
    localnymboxhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localnymboxhash_);
  }
  remotenymboxhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_remotenymboxhash()) {
    remotenymboxhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remotenymboxhash_);
  }
  if (from.has_signature()) {
    signature_ = new ::opentxs::proto::Signature(*from.signature_);
  } else {
    signature_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&requestnumber_) -
    reinterpret_cast<char*>(&version_)) + sizeof(requestnumber_));
  clear_has_typedata();
  switch (from.typedata_case()) {
    case kServercontext: {
      mutable_servercontext()->::opentxs::proto::ServerContext::MergeFrom(from.servercontext());
      break;
    }
    case kClientcontext: {
      mutable_clientcontext()->::opentxs::proto::ClientContext::MergeFrom(from.clientcontext());
      break;
    }
    case TYPEDATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:opentxs.proto.Context)
}

void Context::SharedCtor() {
  _cached_size_ = 0;
  localnym_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remotenym_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localnymboxhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remotenymboxhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&signature_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&requestnumber_) -
      reinterpret_cast<char*>(&signature_)) + sizeof(requestnumber_));
  clear_has_typedata();
}

Context::~Context() {
  // @@protoc_insertion_point(destructor:opentxs.proto.Context)
  SharedDtor();
}

void Context::SharedDtor() {
  localnym_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remotenym_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localnymboxhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remotenymboxhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete signature_;
  if (has_typedata()) {
    clear_typedata();
  }
}

void Context::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Context& Context::default_instance() {
  ::protobuf_Context_2eproto::InitDefaultsContext();
  return *internal_default_instance();
}

Context* Context::New(::google::protobuf::Arena* arena) const {
  Context* n = new Context;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Context::clear_typedata() {
// @@protoc_insertion_point(one_of_clear_start:opentxs.proto.Context)
  switch (typedata_case()) {
    case kServercontext: {
      delete typedata_.servercontext_;
      break;
    }
    case kClientcontext: {
      delete typedata_.clientcontext_;
      break;
    }
    case TYPEDATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPEDATA_NOT_SET;
}


void Context::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.proto.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acknowledgedrequestnumber_.Clear();
  availabletransactionnumber_.Clear();
  issuedtransactionnumber_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!localnym_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*localnym_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!remotenym_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*remotenym_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!localnymboxhash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*localnymboxhash_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!remotenymboxhash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*remotenymboxhash_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(signature_ != NULL);
      signature_->Clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&requestnumber_) -
        reinterpret_cast<char*>(&version_)) + sizeof(requestnumber_));
  }
  clear_typedata();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Context::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.proto.Context)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .opentxs.proto.ConsensusType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::opentxs::proto::ConsensusType_IsValid(value)) {
            set_type(static_cast< ::opentxs::proto::ConsensusType >(value));
          } else {
            unknown_fields_stream.WriteVarint32(16u);
            unknown_fields_stream.WriteVarint32(
                static_cast< ::google::protobuf::uint32>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string localnym = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localnym()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string remotenym = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remotenym()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string localnymboxhash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localnymboxhash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string remotenymboxhash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remotenymboxhash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 requestnumber = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_requestnumber();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 acknowledgedrequestnumber = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 64u, input, this->mutable_acknowledgedrequestnumber())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_acknowledgedrequestnumber())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 availabletransactionnumber = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 72u, input, this->mutable_availabletransactionnumber())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_availabletransactionnumber())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 issuedtransactionnumber = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 80u, input, this->mutable_issuedtransactionnumber())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_issuedtransactionnumber())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .opentxs.proto.ServerContext servercontext = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_servercontext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .opentxs.proto.ClientContext clientcontext = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_clientcontext()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .opentxs.proto.Signature signature = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.proto.Context)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.proto.Context)
  return false;
#undef DO_
}

void Context::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.proto.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional .opentxs.proto.ConsensusType type = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional string localnym = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->localnym(), output);
  }

  // optional string remotenym = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->remotenym(), output);
  }

  // optional string localnymboxhash = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->localnymboxhash(), output);
  }

  // optional string remotenymboxhash = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->remotenymboxhash(), output);
  }

  // optional uint64 requestnumber = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->requestnumber(), output);
  }

  // repeated uint64 acknowledgedrequestnumber = 8;
  for (int i = 0, n = this->acknowledgedrequestnumber_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      8, this->acknowledgedrequestnumber(i), output);
  }

  // repeated uint64 availabletransactionnumber = 9;
  for (int i = 0, n = this->availabletransactionnumber_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      9, this->availabletransactionnumber(i), output);
  }

  // repeated uint64 issuedtransactionnumber = 10;
  for (int i = 0, n = this->issuedtransactionnumber_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      10, this->issuedtransactionnumber(i), output);
  }

  switch (typedata_case()) {
    case kServercontext:
      ::google::protobuf::internal::WireFormatLite::WriteMessage(
        11, *typedata_.servercontext_, output);
      break;
    case kClientcontext:
      ::google::protobuf::internal::WireFormatLite::WriteMessage(
        12, *typedata_.clientcontext_, output);
      break;
    default: ;
  }
  // optional .opentxs.proto.Signature signature = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      15, *this->signature_, output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.proto.Context)
}

size_t Context::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.proto.Context)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated uint64 acknowledgedrequestnumber = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->acknowledgedrequestnumber_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->acknowledgedrequestnumber_size());
    total_size += data_size;
  }

  // repeated uint64 availabletransactionnumber = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->availabletransactionnumber_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->availabletransactionnumber_size());
    total_size += data_size;
  }

  // repeated uint64 issuedtransactionnumber = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->issuedtransactionnumber_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->issuedtransactionnumber_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string localnym = 3;
    if (has_localnym()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localnym());
    }

    // optional string remotenym = 4;
    if (has_remotenym()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remotenym());
    }

    // optional string localnymboxhash = 5;
    if (has_localnymboxhash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localnymboxhash());
    }

    // optional string remotenymboxhash = 6;
    if (has_remotenymboxhash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->remotenymboxhash());
    }

    // optional .opentxs.proto.Signature signature = 15;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->signature_);
    }

    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional .opentxs.proto.ConsensusType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional uint64 requestnumber = 7;
    if (has_requestnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->requestnumber());
    }

  }
  switch (typedata_case()) {
    // optional .opentxs.proto.ServerContext servercontext = 11;
    case kServercontext: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *typedata_.servercontext_);
      break;
    }
    // optional .opentxs.proto.ClientContext clientcontext = 12;
    case kClientcontext: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *typedata_.clientcontext_);
      break;
    }
    case TYPEDATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Context::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Context*>(&from));
}

void Context::MergeFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.proto.Context)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  acknowledgedrequestnumber_.MergeFrom(from.acknowledgedrequestnumber_);
  availabletransactionnumber_.MergeFrom(from.availabletransactionnumber_);
  issuedtransactionnumber_.MergeFrom(from.issuedtransactionnumber_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_localnym();
      localnym_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localnym_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_remotenym();
      remotenym_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remotenym_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_localnymboxhash();
      localnymboxhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.localnymboxhash_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_remotenymboxhash();
      remotenymboxhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remotenymboxhash_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_signature()->::opentxs::proto::Signature::MergeFrom(from.signature());
    }
    if (cached_has_bits & 0x00000020u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000040u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000080u) {
      requestnumber_ = from.requestnumber_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.typedata_case()) {
    case kServercontext: {
      mutable_servercontext()->::opentxs::proto::ServerContext::MergeFrom(from.servercontext());
      break;
    }
    case kClientcontext: {
      mutable_clientcontext()->::opentxs::proto::ClientContext::MergeFrom(from.clientcontext());
      break;
    }
    case TYPEDATA_NOT_SET: {
      break;
    }
  }
}

void Context::CopyFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.proto.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Context::IsInitialized() const {
  return true;
}

void Context::Swap(Context* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Context::InternalSwap(Context* other) {
  using std::swap;
  acknowledgedrequestnumber_.InternalSwap(&other->acknowledgedrequestnumber_);
  availabletransactionnumber_.InternalSwap(&other->availabletransactionnumber_);
  issuedtransactionnumber_.InternalSwap(&other->issuedtransactionnumber_);
  localnym_.Swap(&other->localnym_);
  remotenym_.Swap(&other->remotenym_);
  localnymboxhash_.Swap(&other->localnymboxhash_);
  remotenymboxhash_.Swap(&other->remotenymboxhash_);
  swap(signature_, other->signature_);
  swap(version_, other->version_);
  swap(type_, other->type_);
  swap(requestnumber_, other->requestnumber_);
  swap(typedata_, other->typedata_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string Context::GetTypeName() const {
  return "opentxs.proto.Context";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace opentxs

// @@protoc_insertion_point(global_scope)
