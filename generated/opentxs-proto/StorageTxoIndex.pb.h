// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StorageTxoIndex.proto

#ifndef PROTOBUF_StorageTxoIndex_2eproto__INCLUDED
#define PROTOBUF_StorageTxoIndex_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "StorageBlockchainTxo.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protobuf_StorageTxoIndex_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void InitDefaultsStorageTxoIndexImpl();
void InitDefaultsStorageTxoIndex();
inline void InitDefaults() {
  InitDefaultsStorageTxoIndex();
}
}  // namespace protobuf_StorageTxoIndex_2eproto
namespace opentxs {
namespace proto {
class StorageTxoIndex;
class StorageTxoIndexDefaultTypeInternal;
extern StorageTxoIndexDefaultTypeInternal _StorageTxoIndex_default_instance_;
}  // namespace proto
}  // namespace opentxs
namespace opentxs {
namespace proto {

// ===================================================================

class StorageTxoIndex : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:opentxs.proto.StorageTxoIndex) */ {
 public:
  StorageTxoIndex();
  virtual ~StorageTxoIndex();

  StorageTxoIndex(const StorageTxoIndex& from);

  inline StorageTxoIndex& operator=(const StorageTxoIndex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorageTxoIndex(StorageTxoIndex&& from) noexcept
    : StorageTxoIndex() {
    *this = ::std::move(from);
  }

  inline StorageTxoIndex& operator=(StorageTxoIndex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const StorageTxoIndex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StorageTxoIndex* internal_default_instance() {
    return reinterpret_cast<const StorageTxoIndex*>(
               &_StorageTxoIndex_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(StorageTxoIndex* other);
  friend void swap(StorageTxoIndex& a, StorageTxoIndex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorageTxoIndex* New() const PROTOBUF_FINAL { return New(NULL); }

  StorageTxoIndex* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const StorageTxoIndex& from);
  void MergeFrom(const StorageTxoIndex& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StorageTxoIndex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .opentxs.proto.StorageBlockchainTxo txo = 2;
  int txo_size() const;
  void clear_txo();
  static const int kTxoFieldNumber = 2;
  const ::opentxs::proto::StorageBlockchainTxo& txo(int index) const;
  ::opentxs::proto::StorageBlockchainTxo* mutable_txo(int index);
  ::opentxs::proto::StorageBlockchainTxo* add_txo();
  ::google::protobuf::RepeatedPtrField< ::opentxs::proto::StorageBlockchainTxo >*
      mutable_txo();
  const ::google::protobuf::RepeatedPtrField< ::opentxs::proto::StorageBlockchainTxo >&
      txo() const;

  // optional uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:opentxs.proto.StorageTxoIndex)
 private:
  void set_has_version();
  void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::opentxs::proto::StorageBlockchainTxo > txo_;
  ::google::protobuf::uint32 version_;
  friend struct ::protobuf_StorageTxoIndex_2eproto::TableStruct;
  friend void ::protobuf_StorageTxoIndex_2eproto::InitDefaultsStorageTxoIndexImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StorageTxoIndex

// optional uint32 version = 1;
inline bool StorageTxoIndex::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StorageTxoIndex::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StorageTxoIndex::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StorageTxoIndex::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 StorageTxoIndex::version() const {
  // @@protoc_insertion_point(field_get:opentxs.proto.StorageTxoIndex.version)
  return version_;
}
inline void StorageTxoIndex::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:opentxs.proto.StorageTxoIndex.version)
}

// repeated .opentxs.proto.StorageBlockchainTxo txo = 2;
inline int StorageTxoIndex::txo_size() const {
  return txo_.size();
}
inline const ::opentxs::proto::StorageBlockchainTxo& StorageTxoIndex::txo(int index) const {
  // @@protoc_insertion_point(field_get:opentxs.proto.StorageTxoIndex.txo)
  return txo_.Get(index);
}
inline ::opentxs::proto::StorageBlockchainTxo* StorageTxoIndex::mutable_txo(int index) {
  // @@protoc_insertion_point(field_mutable:opentxs.proto.StorageTxoIndex.txo)
  return txo_.Mutable(index);
}
inline ::opentxs::proto::StorageBlockchainTxo* StorageTxoIndex::add_txo() {
  // @@protoc_insertion_point(field_add:opentxs.proto.StorageTxoIndex.txo)
  return txo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::opentxs::proto::StorageBlockchainTxo >*
StorageTxoIndex::mutable_txo() {
  // @@protoc_insertion_point(field_mutable_list:opentxs.proto.StorageTxoIndex.txo)
  return &txo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::opentxs::proto::StorageBlockchainTxo >&
StorageTxoIndex::txo() const {
  // @@protoc_insertion_point(field_list:opentxs.proto.StorageTxoIndex.txo)
  return txo_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace opentxs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_StorageTxoIndex_2eproto__INCLUDED
