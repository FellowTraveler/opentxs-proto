// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StoragePaymentWorkflows.proto

#include "StoragePaymentWorkflows.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace opentxs {
namespace proto {
class StoragePaymentWorkflowsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoragePaymentWorkflows>
      _instance;
} _StoragePaymentWorkflows_default_instance_;
}  // namespace proto
}  // namespace opentxs
namespace protobuf_StoragePaymentWorkflows_2eproto {
void InitDefaultsStoragePaymentWorkflowsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StorageItemHash_2eproto::InitDefaultsStorageItemHash();
  protobuf_StorageWorkflowIndex_2eproto::InitDefaultsStorageWorkflowIndex();
  protobuf_StorageWorkflowType_2eproto::InitDefaultsStorageWorkflowType();
  {
    void* ptr = &::opentxs::proto::_StoragePaymentWorkflows_default_instance_;
    new (ptr) ::opentxs::proto::StoragePaymentWorkflows();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opentxs::proto::StoragePaymentWorkflows::InitAsDefaultInstance();
}

void InitDefaultsStoragePaymentWorkflows() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStoragePaymentWorkflowsImpl);
}

}  // namespace protobuf_StoragePaymentWorkflows_2eproto
namespace opentxs {
namespace proto {

// ===================================================================

void StoragePaymentWorkflows::InitAsDefaultInstance() {
}
void StoragePaymentWorkflows::clear_workflow() {
  workflow_.Clear();
}
void StoragePaymentWorkflows::clear_items() {
  items_.Clear();
}
void StoragePaymentWorkflows::clear_accounts() {
  accounts_.Clear();
}
void StoragePaymentWorkflows::clear_units() {
  units_.Clear();
}
void StoragePaymentWorkflows::clear_types() {
  types_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoragePaymentWorkflows::kVersionFieldNumber;
const int StoragePaymentWorkflows::kWorkflowFieldNumber;
const int StoragePaymentWorkflows::kItemsFieldNumber;
const int StoragePaymentWorkflows::kAccountsFieldNumber;
const int StoragePaymentWorkflows::kUnitsFieldNumber;
const int StoragePaymentWorkflows::kTypesFieldNumber;
const int StoragePaymentWorkflows::kArchivedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoragePaymentWorkflows::StoragePaymentWorkflows()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StoragePaymentWorkflows_2eproto::InitDefaultsStoragePaymentWorkflows();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:opentxs.proto.StoragePaymentWorkflows)
}
StoragePaymentWorkflows::StoragePaymentWorkflows(const StoragePaymentWorkflows& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      workflow_(from.workflow_),
      items_(from.items_),
      accounts_(from.accounts_),
      units_(from.units_),
      types_(from.types_),
      archived_(from.archived_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:opentxs.proto.StoragePaymentWorkflows)
}

void StoragePaymentWorkflows::SharedCtor() {
  _cached_size_ = 0;
  version_ = 0u;
}

StoragePaymentWorkflows::~StoragePaymentWorkflows() {
  // @@protoc_insertion_point(destructor:opentxs.proto.StoragePaymentWorkflows)
  SharedDtor();
}

void StoragePaymentWorkflows::SharedDtor() {
}

void StoragePaymentWorkflows::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StoragePaymentWorkflows& StoragePaymentWorkflows::default_instance() {
  ::protobuf_StoragePaymentWorkflows_2eproto::InitDefaultsStoragePaymentWorkflows();
  return *internal_default_instance();
}

StoragePaymentWorkflows* StoragePaymentWorkflows::New(::google::protobuf::Arena* arena) const {
  StoragePaymentWorkflows* n = new StoragePaymentWorkflows;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoragePaymentWorkflows::Clear() {
// @@protoc_insertion_point(message_clear_start:opentxs.proto.StoragePaymentWorkflows)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workflow_.Clear();
  items_.Clear();
  accounts_.Clear();
  units_.Clear();
  types_.Clear();
  archived_.Clear();
  version_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoragePaymentWorkflows::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:opentxs.proto.StoragePaymentWorkflows)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.proto.StorageItemHash workflow = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_workflow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.proto.StorageWorkflowIndex items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.proto.StorageWorkflowIndex accounts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_accounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.proto.StorageWorkflowIndex units = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_units()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opentxs.proto.StorageWorkflowType types = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string archived = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_archived()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opentxs.proto.StoragePaymentWorkflows)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opentxs.proto.StoragePaymentWorkflows)
  return false;
#undef DO_
}

void StoragePaymentWorkflows::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opentxs.proto.StoragePaymentWorkflows)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // repeated .opentxs.proto.StorageItemHash workflow = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->workflow_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->workflow(static_cast<int>(i)), output);
  }

  // repeated .opentxs.proto.StorageWorkflowIndex items = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->items(static_cast<int>(i)), output);
  }

  // repeated .opentxs.proto.StorageWorkflowIndex accounts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accounts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->accounts(static_cast<int>(i)), output);
  }

  // repeated .opentxs.proto.StorageWorkflowIndex units = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->units_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      5, this->units(static_cast<int>(i)), output);
  }

  // repeated .opentxs.proto.StorageWorkflowType types = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->types_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      6, this->types(static_cast<int>(i)), output);
  }

  // repeated string archived = 7;
  for (int i = 0, n = this->archived_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->archived(i), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:opentxs.proto.StoragePaymentWorkflows)
}

size_t StoragePaymentWorkflows::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opentxs.proto.StoragePaymentWorkflows)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  // repeated .opentxs.proto.StorageItemHash workflow = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->workflow_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->workflow(static_cast<int>(i)));
    }
  }

  // repeated .opentxs.proto.StorageWorkflowIndex items = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // repeated .opentxs.proto.StorageWorkflowIndex accounts = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->accounts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->accounts(static_cast<int>(i)));
    }
  }

  // repeated .opentxs.proto.StorageWorkflowIndex units = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->units_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->units(static_cast<int>(i)));
    }
  }

  // repeated .opentxs.proto.StorageWorkflowType types = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->types(static_cast<int>(i)));
    }
  }

  // repeated string archived = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->archived_size());
  for (int i = 0, n = this->archived_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->archived(i));
  }

  // optional uint32 version = 1;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoragePaymentWorkflows::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StoragePaymentWorkflows*>(&from));
}

void StoragePaymentWorkflows::MergeFrom(const StoragePaymentWorkflows& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opentxs.proto.StoragePaymentWorkflows)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workflow_.MergeFrom(from.workflow_);
  items_.MergeFrom(from.items_);
  accounts_.MergeFrom(from.accounts_);
  units_.MergeFrom(from.units_);
  types_.MergeFrom(from.types_);
  archived_.MergeFrom(from.archived_);
  if (from.has_version()) {
    set_version(from.version());
  }
}

void StoragePaymentWorkflows::CopyFrom(const StoragePaymentWorkflows& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentxs.proto.StoragePaymentWorkflows)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoragePaymentWorkflows::IsInitialized() const {
  return true;
}

void StoragePaymentWorkflows::Swap(StoragePaymentWorkflows* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoragePaymentWorkflows::InternalSwap(StoragePaymentWorkflows* other) {
  using std::swap;
  workflow_.InternalSwap(&other->workflow_);
  items_.InternalSwap(&other->items_);
  accounts_.InternalSwap(&other->accounts_);
  units_.InternalSwap(&other->units_);
  types_.InternalSwap(&other->types_);
  archived_.InternalSwap(&other->archived_);
  swap(version_, other->version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string StoragePaymentWorkflows::GetTypeName() const {
  return "opentxs.proto.StoragePaymentWorkflows";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace opentxs

// @@protoc_insertion_point(global_scope)
