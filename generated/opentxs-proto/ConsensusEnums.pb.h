// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConsensusEnums.proto

#ifndef PROTOBUF_ConsensusEnums_2eproto__INCLUDED
#define PROTOBUF_ConsensusEnums_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ConsensusEnums_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
inline void InitDefaults() {
}
}  // namespace protobuf_ConsensusEnums_2eproto
namespace opentxs {
namespace proto {
}  // namespace proto
}  // namespace opentxs
namespace opentxs {
namespace proto {

enum ConsensusType {
  CONSENSUSTYPE_ERROR = 0,
  CONSENSUSTYPE_SERVER = 1,
  CONSENSUSTYPE_CLIENT = 2,
  CONSENSUSTYPE_PEER = 3
};
bool ConsensusType_IsValid(int value);
const ConsensusType ConsensusType_MIN = CONSENSUSTYPE_ERROR;
const ConsensusType ConsensusType_MAX = CONSENSUSTYPE_PEER;
const int ConsensusType_ARRAYSIZE = ConsensusType_MAX + 1;

enum DeliveryState {
  DELIVERTYSTATE_ERROR = 0,
  DELIVERTYSTATE_IDLE = 1,
  DELIVERTYSTATE_PENDINGSEND = 2,
  DELIVERTYSTATE_NEEDNYMBOX = 3,
  DELIVERTYSTATE_NEEDBOXITEMS = 4,
  DELIVERTYSTATE_NEEDPROCESSNYMBOX = 5
};
bool DeliveryState_IsValid(int value);
const DeliveryState DeliveryState_MIN = DELIVERTYSTATE_ERROR;
const DeliveryState DeliveryState_MAX = DELIVERTYSTATE_NEEDPROCESSNYMBOX;
const int DeliveryState_ARRAYSIZE = DeliveryState_MAX + 1;

enum LastReplyStatus {
  LASTREPLYSTATUS_INVALID = 0,
  LASTREPLYSTATUS_NONE = 1,
  LASTREPLYSTATUS_MESSAGESUCCESS = 2,
  LASTREPLYSTATUS_MESSAGEFAILED = 3,
  LASTREPLYSTATUS_UNKNOWN = 4,
  LASTREPLYSTATUS_NOTSENT = 5
};
bool LastReplyStatus_IsValid(int value);
const LastReplyStatus LastReplyStatus_MIN = LASTREPLYSTATUS_INVALID;
const LastReplyStatus LastReplyStatus_MAX = LASTREPLYSTATUS_NOTSENT;
const int LastReplyStatus_ARRAYSIZE = LastReplyStatus_MAX + 1;

// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace opentxs

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::opentxs::proto::ConsensusType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::opentxs::proto::DeliveryState> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::opentxs::proto::LastReplyStatus> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ConsensusEnums_2eproto__INCLUDED
