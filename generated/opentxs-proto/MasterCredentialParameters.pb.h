// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MasterCredentialParameters.proto

#ifndef PROTOBUF_MasterCredentialParameters_2eproto__INCLUDED
#define PROTOBUF_MasterCredentialParameters_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "NymIDSource.pb.h"  // IWYU pragma: export
#include "SourceProof.pb.h"  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protobuf_MasterCredentialParameters_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void InitDefaultsMasterCredentialParametersImpl();
void InitDefaultsMasterCredentialParameters();
inline void InitDefaults() {
  InitDefaultsMasterCredentialParameters();
}
}  // namespace protobuf_MasterCredentialParameters_2eproto
namespace opentxs {
namespace proto {
class MasterCredentialParameters;
class MasterCredentialParametersDefaultTypeInternal;
extern MasterCredentialParametersDefaultTypeInternal _MasterCredentialParameters_default_instance_;
}  // namespace proto
}  // namespace opentxs
namespace opentxs {
namespace proto {

// ===================================================================

class MasterCredentialParameters : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:opentxs.proto.MasterCredentialParameters) */ {
 public:
  MasterCredentialParameters();
  virtual ~MasterCredentialParameters();

  MasterCredentialParameters(const MasterCredentialParameters& from);

  inline MasterCredentialParameters& operator=(const MasterCredentialParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MasterCredentialParameters(MasterCredentialParameters&& from) noexcept
    : MasterCredentialParameters() {
    *this = ::std::move(from);
  }

  inline MasterCredentialParameters& operator=(MasterCredentialParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const MasterCredentialParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MasterCredentialParameters* internal_default_instance() {
    return reinterpret_cast<const MasterCredentialParameters*>(
               &_MasterCredentialParameters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MasterCredentialParameters* other);
  friend void swap(MasterCredentialParameters& a, MasterCredentialParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MasterCredentialParameters* New() const PROTOBUF_FINAL { return New(NULL); }

  MasterCredentialParameters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const MasterCredentialParameters& from);
  void MergeFrom(const MasterCredentialParameters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MasterCredentialParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .opentxs.proto.NymIDSource source = 2;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 2;
  const ::opentxs::proto::NymIDSource& source() const;
  ::opentxs::proto::NymIDSource* release_source();
  ::opentxs::proto::NymIDSource* mutable_source();
  void set_allocated_source(::opentxs::proto::NymIDSource* source);

  // optional .opentxs.proto.SourceProof sourceProof = 3;
  bool has_sourceproof() const;
  void clear_sourceproof();
  static const int kSourceProofFieldNumber = 3;
  const ::opentxs::proto::SourceProof& sourceproof() const;
  ::opentxs::proto::SourceProof* release_sourceproof();
  ::opentxs::proto::SourceProof* mutable_sourceproof();
  void set_allocated_sourceproof(::opentxs::proto::SourceProof* sourceproof);

  // optional uint32 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:opentxs.proto.MasterCredentialParameters)
 private:
  void set_has_version();
  void clear_has_version();
  void set_has_source();
  void clear_has_source();
  void set_has_sourceproof();
  void clear_has_sourceproof();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::opentxs::proto::NymIDSource* source_;
  ::opentxs::proto::SourceProof* sourceproof_;
  ::google::protobuf::uint32 version_;
  friend struct ::protobuf_MasterCredentialParameters_2eproto::TableStruct;
  friend void ::protobuf_MasterCredentialParameters_2eproto::InitDefaultsMasterCredentialParametersImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MasterCredentialParameters

// optional uint32 version = 1;
inline bool MasterCredentialParameters::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MasterCredentialParameters::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MasterCredentialParameters::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MasterCredentialParameters::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 MasterCredentialParameters::version() const {
  // @@protoc_insertion_point(field_get:opentxs.proto.MasterCredentialParameters.version)
  return version_;
}
inline void MasterCredentialParameters::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:opentxs.proto.MasterCredentialParameters.version)
}

// optional .opentxs.proto.NymIDSource source = 2;
inline bool MasterCredentialParameters::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MasterCredentialParameters::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MasterCredentialParameters::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::opentxs::proto::NymIDSource& MasterCredentialParameters::source() const {
  const ::opentxs::proto::NymIDSource* p = source_;
  // @@protoc_insertion_point(field_get:opentxs.proto.MasterCredentialParameters.source)
  return p != NULL ? *p : *reinterpret_cast<const ::opentxs::proto::NymIDSource*>(
      &::opentxs::proto::_NymIDSource_default_instance_);
}
inline ::opentxs::proto::NymIDSource* MasterCredentialParameters::release_source() {
  // @@protoc_insertion_point(field_release:opentxs.proto.MasterCredentialParameters.source)
  clear_has_source();
  ::opentxs::proto::NymIDSource* temp = source_;
  source_ = NULL;
  return temp;
}
inline ::opentxs::proto::NymIDSource* MasterCredentialParameters::mutable_source() {
  set_has_source();
  if (source_ == NULL) {
    source_ = new ::opentxs::proto::NymIDSource;
  }
  // @@protoc_insertion_point(field_mutable:opentxs.proto.MasterCredentialParameters.source)
  return source_;
}
inline void MasterCredentialParameters::set_allocated_source(::opentxs::proto::NymIDSource* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_);
  }
  if (source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    set_has_source();
  } else {
    clear_has_source();
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:opentxs.proto.MasterCredentialParameters.source)
}

// optional .opentxs.proto.SourceProof sourceProof = 3;
inline bool MasterCredentialParameters::has_sourceproof() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MasterCredentialParameters::set_has_sourceproof() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MasterCredentialParameters::clear_has_sourceproof() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::opentxs::proto::SourceProof& MasterCredentialParameters::sourceproof() const {
  const ::opentxs::proto::SourceProof* p = sourceproof_;
  // @@protoc_insertion_point(field_get:opentxs.proto.MasterCredentialParameters.sourceProof)
  return p != NULL ? *p : *reinterpret_cast<const ::opentxs::proto::SourceProof*>(
      &::opentxs::proto::_SourceProof_default_instance_);
}
inline ::opentxs::proto::SourceProof* MasterCredentialParameters::release_sourceproof() {
  // @@protoc_insertion_point(field_release:opentxs.proto.MasterCredentialParameters.sourceProof)
  clear_has_sourceproof();
  ::opentxs::proto::SourceProof* temp = sourceproof_;
  sourceproof_ = NULL;
  return temp;
}
inline ::opentxs::proto::SourceProof* MasterCredentialParameters::mutable_sourceproof() {
  set_has_sourceproof();
  if (sourceproof_ == NULL) {
    sourceproof_ = new ::opentxs::proto::SourceProof;
  }
  // @@protoc_insertion_point(field_mutable:opentxs.proto.MasterCredentialParameters.sourceProof)
  return sourceproof_;
}
inline void MasterCredentialParameters::set_allocated_sourceproof(::opentxs::proto::SourceProof* sourceproof) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sourceproof_);
  }
  if (sourceproof) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sourceproof = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sourceproof, submessage_arena);
    }
    set_has_sourceproof();
  } else {
    clear_has_sourceproof();
  }
  sourceproof_ = sourceproof;
  // @@protoc_insertion_point(field_set_allocated:opentxs.proto.MasterCredentialParameters.sourceProof)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace opentxs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MasterCredentialParameters_2eproto__INCLUDED
